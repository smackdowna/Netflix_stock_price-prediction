# Importinng the libraries

import numpy as np
import pandas as pd
import pandas_datareader as web
from sklearn.tree import DecisionTreeRegressor
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
plt.style.use('bmh')


#Get The stock from internet

df = web.DataReader('NFLX', data_source='yahoo', start='2015-01-01', end='2021-03-01')
#show the data
df.head(4)

# Shape of the data 
df.shape

#Visualize the Close price data

plt.figure(figsize=(22,5))
plt.title('Netflix')
plt.plot(df['Close'])
plt.xlabel('Date', fontsize=18)
plt.ylabel('close Price USD ($) ',fontsize=18)
plt.show()



#Get the Close Price
df = df[['Close']]
df.head(4)



#Create a variable to predict  x days out into the future
future_days = 25

# Create a new coloumn (target) shifted  x  days up
df['Predictions'] = df[['Close']].shift(-future_days)
df.tail(4)


#Create a future data set X and convert it into Numpy array and remove x rows days from it
X = np.array(df.drop(['Predictions'], 1))[:-future_days]
X


#Create a target data y and convert it into numpy array  
y = np.array(df['Predictions'])[:-future_days]
y



#Split the data into 75% training and 25% testing data
x_train , x_test , y_train , y_test = train_test_split(X, y , test_size = 0.25)


# Create the Model
# CReate the Decision Tree model
tree = DecisionTreeRegressor().fit(x_train,y_train)

# Create the Linear Regressor Model
lr = LinearRegression().fit(x_train, y_train)




# get the last 'x' rows of future data set

x_future = df.drop(['Predictions'], 1)[:-future_days]
x_future = x_future.tail(future_days)
x_future = np.array(x_future)
x_future


# Show the Model tree Prediction
tree_prediction = tree.predict(x_future)
print(tree_prediction)
print()

# show the Linear Model Prediction

lr_predection = lr.predict(x_future)
print(lr_predection)


#Visualize the data decison Tree model
predictions = tree_prediction

valid = df[X.shape[0]:]
valid['Predictions'] = predictions
plt.figure(figsize=(16,5))
plt.title('Model')
plt.plot(df['Close'])
plt.xlabel('Days')
plt.ylabel('close Price USD ($) ')
plt.plot(valid[['Close','Predictions']])
plt.legend(['Orig' , ' Val' , 'Pred'])
plt.show()






#print the price and predicton price
valid



#Visualize the data  Linear Regression
predictions = lr_predection

valid = df[X.shape[0]:]
valid['Predictions'] = predictions
plt.figure(figsize=(16,5))
plt.title('Model')
plt.plot(df['Close'])
plt.xlabel('Days')
plt.ylabel('close Price USD ($) ')
plt.plot(valid[['Close','Predictions']])
plt.legend(['Orig' , ' Val' , 'Pred'])
plt.show()


#print the price and predicton price
valid



